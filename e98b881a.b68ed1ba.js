(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),i=(n(0),n(93)),l={id:"introduction",title:"Drag & Drop",sidebar_label:"Introduction To Drag & Drop",description:"Draggable and Drop component written in pure JS works for Web and Mobile",keywords:["draggable","drop","drag","JavaScript","DOM","dflex"]},o={unversionedId:"drag-drop/introduction",id:"drag-drop/introduction",isDocsHomePage:!1,title:"Drag & Drop",description:"Draggable and Drop component written in pure JS works for Web and Mobile",source:"@site/docs\\drag-drop\\intro.md",slug:"/drag-drop/introduction",permalink:"/dflex/docs/drag-drop/introduction",editUrl:"https://github.com/jalal246/dflex/edit/master/docs/docs/drag-drop/intro.md",version:"current",sidebar_label:"Introduction To Drag & Drop",sidebar:"someSidebar",previous:{title:"Draggable Framework Implementations",permalink:"/dflex/docs/draggable/implementations"},next:{title:"Drag & Drop Live Examples",permalink:"/dflex/docs/drag-drop/examples"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Features",id:"features",children:[]},{value:"API",id:"api",children:[{value:"Register Element",id:"register-element",children:[]},{value:"Start Dragging",id:"start-dragging",children:[]},{value:"End dragging",id:"end-dragging",children:[]}]},{value:"Advanced",id:"advanced",children:[{value:"Attach/Reattach Element Reference in the Store",id:"attachreattach-element-reference-in-the-store",children:[]},{value:"Reset Element in the Store",id:"reset-element-in-the-store",children:[]},{value:"Getting dragged Index",id:"getting-dragged-index",children:[]},{value:"Getting Current Order",id:"getting-current-order",children:[]}]}],d={toc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"A Simple, lightweight Solution for a Drag & Drop App")),Object(i.b)("p",null,"DFlex DnD is written in pure JavaScript and can be used with different frameworks\nwhether it is React, Vue, Angular, etc."),Object(i.b)("p",null,"It depends on animation, tracks each droppable area which makes the whole\nprocess runs smoothly as much as possible."),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"npm install @dflex/dnd\n")),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"https://raw.githubusercontent.com/jalal246/dflex/master/packages/dnd/public/dnd.gif",alt:"show how drag and drop works"})),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"https://raw.githubusercontent.com/jalal246/dflex/master/packages/dnd/public/dnd.png",alt:"show drag and drop performance"})),Object(i.b)("h2",{id:"features"},"Features"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"DOM elements are not re-ordered instead they are being transformed.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Preserve continuity of the layout transformation.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Minimal side effect, only effected elements are manipulated."))),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)("p",null,"You can achieve a drag and drop with three steps only:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Register element in the store."),Object(i.b)("li",{parentName:"ul"},"Start dragging when mouse is down."),Object(i.b)("li",{parentName:"ul"},"End dragging to release element when mouse is up.")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'import { store, DnD } from "@dflex/dnd";\n')),Object(i.b)("h3",{id:"register-element"},"Register Element"),Object(i.b)("p",null,"Each element should be registered in DnD store in order to be active later"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"store.register({ id: String, element: HTMLElement, depth: Number });\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"id: String")," is unique identifer for an element in the registry."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"element: HTMLElement")," targeted DOM element."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"depth: Number")," Element depth in tree. Start from bottom up. So child is ",Object(i.b)("inlineCode",{parentName:"li"},"0"),",\nparents are ",Object(i.b)("inlineCode",{parentName:"li"},"1")," so on so forth. The idea of depth is to be able to targeted\nmultiple containers when you can move a child or a parent wrapper.")),Object(i.b)("h3",{id:"start-dragging"},"Start Dragging"),Object(i.b)("p",null,"Use ",Object(i.b)("inlineCode",{parentName:"p"},"onmousedown")," to trigger responsive dragging"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"const { target, clientX, clientY } = event;\n\ndnd = new DnD(target.id, { x: clientX, y: clientY });\n")),Object(i.b)("h3",{id:"end-dragging"},"End dragging"),Object(i.b)("p",null,"Use ",Object(i.b)("inlineCode",{parentName:"p"},"onmouseup")," to end dragging"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"dnd.endDragging();\n")),Object(i.b)("h2",{id:"advanced"},"Advanced"),Object(i.b)("h3",{id:"attachreattach-element-reference-in-the-store"},"Attach/Reattach Element Reference in the Store"),Object(i.b)("p",null,"To reattach DOM element reference in the store (usually when an element updated in\nthe screen):"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"store.reattachElmRef(id: string, elmRef: HTMLElement)\n")),Object(i.b)("p",null,"To detach DOM element reference in the store (usually when an element disappear\nfrom the screen):"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"store.detachElmRef(id: string)\n")),Object(i.b)("h3",{id:"reset-element-in-the-store"},"Reset Element in the Store"),Object(i.b)("p",null,"To clear element from the registry. Should be called only when element is\nunmounted and expected to return with different positions only. Otherwise, call\n",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"introduction#attachreattach-element-reference"}),"detachElmRef")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"resetElm(id: string)\n")),Object(i.b)("h3",{id:"getting-dragged-index"},"Getting dragged Index"),Object(i.b)("p",null,"In case you need to know the current index of dragged element."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"dnd.getDraggedTempIndex() : number\n")),Object(i.b)("h3",{id:"getting-current-order"},"Getting Current Order"),Object(i.b)("p",null,"To get current layout container order you can always do ",Object(i.b)("inlineCode",{parentName:"p"},"getStatus"),". Calling it\nwhile dragging happens will return element order in an array with ",Object(i.b)("inlineCode",{parentName:"p"},"null")," in the\ndragged index considering the dragged position is not settled yet."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"dnd.getStatus() : Array|string\n")))}b.isMDXComponent=!0},93:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return g}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),b=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=b(n),u=r,g=p["".concat(l,".").concat(u)]||p[u]||s[u]||i;return n?a.a.createElement(g,o(o({ref:t},d),{},{components:n})):a.a.createElement(g,o({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);